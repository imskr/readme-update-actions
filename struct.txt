<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Shubham Kumar on Medium]]></title>
        <description><![CDATA[Stories by Shubham Kumar on Medium]]></description>
        <link>https://medium.com/@imskr?source=rss-2612c96405e4------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*7TxKWBzIm6fSjBPo3gSqpw.png</url>
            <title>Stories by Shubham Kumar on Medium</title>
            <link>https://medium.com/@imskr?source=rss-2612c96405e4------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Fri, 08 Jul 2022 14:43:55 GMT</lastBuildDate>
        <atom:link href="https://medium.com/@imskr/feed" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[Deploy Your Java Spring Boot Application on AWS EC2 Using GitHub Actions and Docker]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://betterprogramming.pub/deploy-your-spring-boot-java-application-to-aws-ec2-using-github-actions-and-docker-e28c456a4b1a?source=rss-2612c96405e4------2"><img src="https://cdn-images-1.medium.com/max/1500/1*b6-traLNG1xOS-qEultHAA.png" width="1500"></a></p><p class="medium-feed-snippet">Supercharge your application in production using GitHub Actions and AWS instance&#xA0;EC2</p><p class="medium-feed-link"><a href="https://betterprogramming.pub/deploy-your-spring-boot-java-application-to-aws-ec2-using-github-actions-and-docker-e28c456a4b1a?source=rss-2612c96405e4------2">Continue reading on Better Programming »</a></p></div>]]></description>
            <link>https://betterprogramming.pub/deploy-your-spring-boot-java-application-to-aws-ec2-using-github-actions-and-docker-e28c456a4b1a?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/e28c456a4b1a</guid>
            <category><![CDATA[devops]]></category>
            <category><![CDATA[spring-boot]]></category>
            <category><![CDATA[java]]></category>
            <category><![CDATA[programming]]></category>
            <category><![CDATA[aws]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Thu, 23 Jun 2022 13:47:19 GMT</pubDate>
            <atom:updated>2022-06-23T16:06:48.197Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[From Open Source Contributor to Google SoC at GitLab]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://medium.com/geekculture/gitlab-google-summer-of-code-e5e819547ee7?source=rss-2612c96405e4------2"><img src="https://cdn-images-1.medium.com/max/1024/1*oPSxlZmZ7nGDCf9qtm7ONw.png" width="1024"></a></p><p class="medium-feed-snippet">How I got selected as Google Summer of Code Intern at GitLab?</p><p class="medium-feed-link"><a href="https://medium.com/geekculture/gitlab-google-summer-of-code-e5e819547ee7?source=rss-2612c96405e4------2">Continue reading on Geek Culture »</a></p></div>]]></description>
            <link>https://medium.com/geekculture/gitlab-google-summer-of-code-e5e819547ee7?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/e5e819547ee7</guid>
            <category><![CDATA[contributor]]></category>
            <category><![CDATA[open-source]]></category>
            <category><![CDATA[gsoc]]></category>
            <category><![CDATA[ruby-on-rails]]></category>
            <category><![CDATA[gitlab]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Tue, 08 Jun 2021 18:32:46 GMT</pubDate>
            <atom:updated>2021-06-08T18:32:46.961Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[How To Build Your First Chrome Extension in 5 Minutes]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://medium.com/dailyjs/how-to-build-your-first-chrome-extension-in-5-min-1dbe3eb94575?source=rss-2612c96405e4------2"><img src="https://cdn-images-1.medium.com/max/1400/1*dwmyv0IJvzNtdj4jGmjIKA.png" width="1400"></a></p><p class="medium-feed-snippet">Learn Extensions like Neo, from Matrix!</p><p class="medium-feed-link"><a href="https://medium.com/dailyjs/how-to-build-your-first-chrome-extension-in-5-min-1dbe3eb94575?source=rss-2612c96405e4------2">Continue reading on DailyJS »</a></p></div>]]></description>
            <link>https://medium.com/dailyjs/how-to-build-your-first-chrome-extension-in-5-min-1dbe3eb94575?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/1dbe3eb94575</guid>
            <category><![CDATA[development]]></category>
            <category><![CDATA[javascript]]></category>
            <category><![CDATA[chrome]]></category>
            <category><![CDATA[programming]]></category>
            <category><![CDATA[chrome-extension]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Mon, 14 Sep 2020 09:34:54 GMT</pubDate>
            <atom:updated>2020-10-19T08:03:40.746Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[My Journey From Open Source Noob to Google Summer of Code 2020]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://betterprogramming.pub/google-summer-of-code-2020-837b262aa581?source=rss-2612c96405e4------2"><img src="https://cdn-images-1.medium.com/max/2600/1*NCV871qd9xWiRlWbKlDN_Q.jpeg" width="5163"></a></p><p class="medium-feed-snippet">How to get started in open source</p><p class="medium-feed-link"><a href="https://betterprogramming.pub/google-summer-of-code-2020-837b262aa581?source=rss-2612c96405e4------2">Continue reading on Better Programming »</a></p></div>]]></description>
            <link>https://betterprogramming.pub/google-summer-of-code-2020-837b262aa581?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/837b262aa581</guid>
            <category><![CDATA[mozilla]]></category>
            <category><![CDATA[gsoc]]></category>
            <category><![CDATA[open-source]]></category>
            <category><![CDATA[programming]]></category>
            <category><![CDATA[google]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Thu, 18 Jun 2020 11:21:19 GMT</pubDate>
            <atom:updated>2020-10-19T08:05:37.168Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[My Visual Studio Code from 2077]]></title>
            <link>https://towardsdatascience.com/my-visual-studio-code-from-2077-1f5b08411dbe?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/1f5b08411dbe</guid>
            <category><![CDATA[productivity]]></category>
            <category><![CDATA[vscode]]></category>
            <category><![CDATA[development]]></category>
            <category><![CDATA[tools]]></category>
            <category><![CDATA[hacks]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Mon, 20 Apr 2020 16:26:30 GMT</pubDate>
            <atom:updated>2020-05-02T12:45:18.715Z</atom:updated>
            <content:encoded><![CDATA[<h4>Let’s talk about code — Visual Studio Code</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*rJh2ck69mlPAcDg5X9G5Ng.jpeg" /><figcaption>Source: <a href="https://www.google.co.in/search?q=vs+code+wall&amp;tbm=isch&amp;ved=2ahUKEwij18KcmpXpAhUuErcAHZigAhMQ2-cCegQIABAA&amp;oq=vs+code+wall&amp;gs_lcp=CgNpbWcQAzICCAA6BAgjECc6BAgAEEM6BggAEAgQHjoECAAQGFDtPVjHQ2CpRWgAcAB4AIAB7wGIAb8HkgEFMC4zLjKYAQCgAQGqAQtnd3Mtd2l6LWltZw&amp;sclient=img&amp;ei=2GqtXqOLCa6k3LUPmMGKmAE&amp;authuser=0&amp;bih=734&amp;biw=1536&amp;hl=en#imgrc=RPJaEWPz6K-UvM">Google Images</a></figcaption></figure><h3>Code - Editor from the Future!</h3><p><em>After migrating from Sublime Text and Atom, I can say that I don’t regret my decision! This is my favorite editor so far and ultimate developer experience with many features unlocked including transparency! </em><strong><em>I will write about setting it up on Linux but you can do it on any platform</em></strong><em>.</em></p><p><em>VS Code uses </em><a href="https://electronjs.org/"><em>Electron</em></a><em> as its base which enables it to be cross-platform and work on macOS, Windows, and Linux. It is built using </em><a href="https://nodejs.org/"><em>Node.js</em></a><em> and has complete support for any JavaScript developer.</em></p><h3>My Themes</h3><p>These are the two themes that I love the most with the custom font!</p><h4><a href="https://marketplace.visualstudio.com/items?itemName=Endormi.2077-theme">2077</a> (Inspired by CyberPunk)— My all-time favorite!</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*vPvlRjfJsYzm9Wi-ciRNIw.png" /><figcaption>My Personal</figcaption></figure><h4>Monokai (Builtin theme shipped with VSCode)</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*IcBepB-V6C-69wOadt5nUg.png" /><figcaption>My Personal</figcaption></figure><h3>My Font</h3><h4><strong><em>Firicico (combination of </em></strong><a href="https://github.com/tonsky/FiraCode"><strong><em>Fira Code</em></strong></a><strong><em> and </em></strong><a href="https://www.fontsquirrel.com/fonts/pacifico"><strong><em>Pacifico</em></strong></a><strong><em> for Italics)</em></strong></h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*0tr-SAjTRX2TZSF0cbOl6w.jpeg" /></figure><p><em>This is the font set-up I use for programming. It uses Fira Code as default font and Pacifico for the italics. Thanks to Fira Code it also has font ligatures.</em></p><p><strong>Customization</strong></p><p>The easiest way to customize the fonts (e.g. resize one of them) is with FontForge. Just open the <strong>“.ttf”</strong> files, edit them and export them back as <strong>“ttf”</strong>. You only have to make sure, that you don’t edit any Metadata, as the font won&#39;t work otherwise.</p><p><strong>What are italics?</strong></p><p>Many editors/IDEs (like VSCode) take the italic font style of the selected font for certain expressions, usually keywords or types. This font replaces the default italic style of Fira Code with another font: Pacifico, so we basically “trick” the program.</p><p>In VSCode expressions, that are styled in italics are controlled by your theme, but you can change and customize this in the <strong>settings.json</strong> under your <strong>“editor.tokenColorCustomizations”</strong>.</p><p><strong>Here is my config:</strong></p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/59aef6bb397bfe303fbff5dcb4b5878f/href">https://medium.com/media/59aef6bb397bfe303fbff5dcb4b5878f/href</a></iframe><h3>Icon Theme</h3><h4><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">Material Icon Theme</a></h4><p>Material-UI inspired file icons, an alternative to File Icons.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*IkBKKOKxtxsxItENJRcE8g.png" /><figcaption><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">image source</a></figcaption></figure><h3>Markdown Support</h3><h4><a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one">Markdown All in One</a></h4><p>All you need to write Markdown (keyboard shortcuts, table of contents, auto preview, and more).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/223/1*UPWi2BXdVvR-OPT-4uRhrQ.gif" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/223/1*ksohm-QMeHysivMnCBbOsA.gif" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/350/1*-rGvkit1DAvkM-xAWq-Rng.gif" /></figure><h3>Bonus! (Productivity Tools)</h3><h4>1. <a href="https://github.com/buunguyen/octotree">Octotree</a> [Browser extension]</h4><p>Browser extension (Chrome, Firefox, Opera, and Safari) to show a code tree on GitHub. Awesome for exploring project source without having to pull every single repository to your machine.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*nhW9cDcWwgIlxpL1sdoHdg.png" /></figure><h4>2. <a href="http://octolinker.github.io/">OctoLinker</a> [Browser extension]</h4><p>Navigate through projects on GitHub.com efficiently with the OctoLinker browser extension. Great for viewing JS/Node/Ruby/Python sources.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*UwP5XUaod-5pj8I9SvUarQ.png" /></figure><h4>3. <a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync">Settings Sync</a></h4><p>Synchronize Settings, Snippets, Themes, File Icons, Launch, Keybindings, Workspaces, and Extensions Across Multiple Machines Using GitHub Gist.</p><h4>4. <a href="https://chrome.google.com/webstore/detail/github-dark-theme/odkdlljoangmamjilkamahebpkgpeacp">GitHub Dark Theme</a> [Browser Extension]</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*mdHCewP8tqlWpWKBW5HrqQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*xDsWL8zuYdn2LtDD0ecGPA.png" /></figure><h3>Got more? Let me know in the comments!</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/500/1*FzVF3-HqiVcfXrugqt9cAQ.gif" /><figcaption><a href="https://tenor.com/view/cheering-happy-laugh-excited-minions-gif-3453134">Image source</a></figcaption></figure><p>Follow me on Twitter — <a href="https://twitter.com/TheTweetofSKR">@TheTweetofSKR</a>, and check my other posts!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1f5b08411dbe" width="1" height="1" alt=""><hr><p><a href="https://towardsdatascience.com/my-visual-studio-code-from-2077-1f5b08411dbe">My Visual Studio Code from 2077</a> was originally published in <a href="https://towardsdatascience.com">Towards Data Science</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Plant Disease Detection Web Application using Fastai]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://towardsdatascience.com/plant-disease-detection-web-application-using-fastai-b0c389b82371?source=rss-2612c96405e4------2"><img src="https://cdn-images-1.medium.com/max/700/1*TKUvZfHReYQvuh83B1CWPg.jpeg" width="700"></a></p><p class="medium-feed-snippet">Achieving state of the art result with fast.ai &amp; Resnet34</p><p class="medium-feed-link"><a href="https://towardsdatascience.com/plant-disease-detection-web-application-using-fastai-b0c389b82371?source=rss-2612c96405e4------2">Continue reading on Towards Data Science »</a></p></div>]]></description>
            <link>https://towardsdatascience.com/plant-disease-detection-web-application-using-fastai-b0c389b82371?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/b0c389b82371</guid>
            <category><![CDATA[plants]]></category>
            <category><![CDATA[deep-learning]]></category>
            <category><![CDATA[fastai]]></category>
            <category><![CDATA[pytorch]]></category>
            <category><![CDATA[machine-learning]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Tue, 13 Aug 2019 09:07:47 GMT</pubDate>
            <atom:updated>2019-08-13T09:07:47.985Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[Linear Regression using Flavor of Python]]></title>
            <link>https://imskr.medium.com/linear-regression-using-flavor-of-python-bcbdc616a944?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/bcbdc616a944</guid>
            <category><![CDATA[python]]></category>
            <category><![CDATA[univariate]]></category>
            <category><![CDATA[linear-regression]]></category>
            <category><![CDATA[regression]]></category>
            <category><![CDATA[machine-learning]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Thu, 04 Jul 2019 17:54:11 GMT</pubDate>
            <atom:updated>2019-07-04T17:54:11.701Z</atom:updated>
            <content:encoded><![CDATA[<h4>Demystifying Linear Regression with simple maths &amp; code, no fancy stuffs!</h4><blockquote>Linear regression is used for finding linear relationship between target and one or more predictors. There are two types of linear regression- Univariate and Multivariate.</blockquote><figure><img alt="" src="https://cdn-images-1.medium.com/max/461/1*_qoaFqMVgjstmtJNp-zNrw.png" /></figure><h4><em>In this article, we will build Univariate Linear Regression model!</em></h4><h3>Univariate Linear Regression</h3><p><strong>Univariate linear regression</strong> focuses on determining relationship between one independent variable and one dependent variable. <strong>Regression</strong> comes handy mainly in situation where the relationship between two features is not obvious to the naked eye.</p><h3>Why?</h3><p>Suppose we wish to analyse the relationship between a vehicle’s weight and fuel economy or the price of a slice of pizza based on the volume of pizza produced. How might we analyse the relationship between these variables? In this article we’ll cover univariate linear regression which is a statistical approach to find and determine a relationship among an independent variable <strong>x</strong> and a dependent variable <strong>y</strong>.</p><p>we can write the relationship between the independent variable and the dependent variable as <strong>y=mx+b</strong> where m is the slope and b is our intercept.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/718/1*9HeePW-xgfunh88AdcCfnQ.png" /></figure><p>In machine learning we typically call <strong>ŷ</strong> our prediction, <strong>x</strong> our feature, and parameters <strong>w</strong> weights. Now let’s rewrite our regression equation in machine learning notation.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/476/1*-N4DdYWfSa6fNLznQPhVLA.png" /></figure><h3>Example</h3><p>Now, let’s step through an example of how to calculate the estimated <strong>ŷ </strong>output of a regression where the linear equation is represented by <strong>ŷ = 2x</strong> and our input feature is <strong>x=4</strong>. In this case there is no intercept. Instead we just have a slope of 2 which means for every increment we increase our input it will double the expected output.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/435/1*DTzZbyGUSi4InoH7leArAA.png" /></figure><p>Let’s go ahead and convert this equation into a small function in <strong>Python</strong> so in the future we can have the computer do all the heavy lifting for us.</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/76b955cf0e0b5364920d1606d12c4dd7/href">https://medium.com/media/76b955cf0e0b5364920d1606d12c4dd7/href</a></iframe><h3>Fitting a Univariate Linear Regression Line</h3><p>As you may have noticed, our formulas only works if we know the slope and intercept of our model, but what if we don’t have this information? Before we can even find our slope and intercept we need to ask ourselves an even more important question. <strong>How can we determine if the model is accurately capture our data </strong>— in other words <strong>is our model a good fit?</strong> Once we have a criteria of how to evaluate a model we can then use this information to find an optimal slope and intercept.</p><p>One approach we can try is to <strong><em>minimise </em>the error </strong>generated in our model by asking how far off our prediction is from the actual outcome. We can do so by measuring the difference between our predictive model <strong>ŷ </strong>and the true value <strong>y</strong> using the sum squared error method.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*5ShFGTJ-GR4x0WA0jKaRwA.jpeg" /></figure><p><strong>Sum of Squared Errors:</strong></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/320/1*z8ap-YuWVoaQgcrscPtlIg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1000/1*AH11fnsdgf8cdB_NB4ti5g.png" /></figure><p>Check this amazing video before reading further by <strong>Sal Khan</strong> for the proof of equation(recommended):</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.khanacademy.org%2Fembed_video%3Fv%3D6OvhLPS7rj4&amp;url=https%3A%2F%2Fwww.khanacademy.org%2Fmath%2Fstatistics-probability%2Fdescribing-relationships-quantitative-data%2Fmore-on-regression%2Fv%2Fsquared-error-of-regression-line&amp;image=http%3A%2F%2Fimg.youtube.com%2Fvi%2F6OvhLPS7rj4%2F0.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=khanacademy" width="853" height="520" frameborder="0" scrolling="no"><a href="https://medium.com/media/9382378356f5b527c252d75876de72fd/href">https://medium.com/media/9382378356f5b527c252d75876de72fd/href</a></iframe><p>Now that we know how to calculate the sum of squared errors, how do we <strong>minimise</strong> it to find the <strong>best fit line</strong> for our linear regression?</p><p>Say for example we have a linear equation where the slope is 1 and the intercept is 0. How can we tell if this is a good model? Well we can compare the predicted values of <strong>ŷ </strong>from the true values <strong>y</strong> in our recorded data set. That is for each point in the data set we would subtract the predict value from the true value in the data and <strong>sum the total of squared errors</strong>.</p><p><em>Let’s convert the sum of squared error function into Python code.</em></p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/ffe0b55626c153bcc746c1bb929a644f/href">https://medium.com/media/ffe0b55626c153bcc746c1bb929a644f/href</a></iframe><p>Okay so now that we have an error formula how can we use it to try to find our <strong>optimal slope and intercept (our weights) that will reduce our errors?</strong> Well, we can analyse the behavior of our SSE and see if it can help us determine which points we can use.</p><p>Instead of manually testing various weight values, we can take the<strong> derivative of the sum of square errors</strong> to help us find our ideal weight parameters.</p><p>Following diagram is the rough figure of how our <strong>Sum of Squared Line</strong> looks like in 3-Dimension!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/792/1*wechwiD4Y0OirHQRNg7Y-w.gif" /></figure><p>After taking <strong>derivative</strong> of the line we get following estimates!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*0he1Xu-dbAWNM-3bwjWHpw.png" /><figcaption><strong>ȳ is the mean value of y and similarly for x</strong></figcaption></figure><p><em>Once again let’s go ahead and code these formulas into Python.</em></p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/9f448580ddab9f9a9f709f5b65b4e1e3/href">https://medium.com/media/9f448580ddab9f9a9f709f5b65b4e1e3/href</a></iframe><figure><img alt="" src="https://cdn-images-1.medium.com/max/600/1*RnVzNy5beooqbaOEfncRIw.jpeg" /></figure><p><strong><em>Now that we can calculate the slope and intercept formulas, let’s create our linear regression model from scratch and make a new prediction.</em></strong></p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/3772c8c2bd7ca78c7be8cd229a1a4b50/href">https://medium.com/media/3772c8c2bd7ca78c7be8cd229a1a4b50/href</a></iframe><h3>Project Fuel Economy</h3><p>Here is the Google Colab link for practice!</p><p>Credit for project: <a href="http://ai-4-all.org/">http://ai-4-all.org/</a></p><p><a href="https://colab.research.google.com/drive/1MKn9JXi-szEGXPfY32NB-F0vM7dYDPJm#scrollTo=RZAJ9bSyqat9">Google Colaboratory</a></p><figure><img alt="" src="https://cdn-images-1.medium.com/max/351/1*iGh0BB1z_zpXD2D7DxTdvQ.jpeg" /></figure><p>Follow me for more amazing stuffs!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bcbdc616a944" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[From Machine Learning to Reinforcement Learning Mastery]]></title>
            <description><![CDATA[<div class="medium-feed-item"><p class="medium-feed-image"><a href="https://betterprogramming.pub/from-machine-learning-to-reinforcement-learning-mastery-47f33d9f6b41?source=rss-2612c96405e4------2"><img src="https://cdn-images-1.medium.com/max/1368/1*rxVZyv2_FVZ9IJcJD1dRMQ.jpeg" width="1368"></a></p><p class="medium-feed-snippet">ML to RL, without a PhD</p><p class="medium-feed-link"><a href="https://betterprogramming.pub/from-machine-learning-to-reinforcement-learning-mastery-47f33d9f6b41?source=rss-2612c96405e4------2">Continue reading on Better Programming »</a></p></div>]]></description>
            <link>https://betterprogramming.pub/from-machine-learning-to-reinforcement-learning-mastery-47f33d9f6b41?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/47f33d9f6b41</guid>
            <category><![CDATA[neural-networks]]></category>
            <category><![CDATA[reinforcement-learning]]></category>
            <category><![CDATA[fastai]]></category>
            <category><![CDATA[deep-learning]]></category>
            <category><![CDATA[machine-learning]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Fri, 28 Jun 2019 15:12:10 GMT</pubDate>
            <atom:updated>2019-06-28T15:12:10.285Z</atom:updated>
        </item>
        <item>
            <title><![CDATA[GirlScript Summer Of Code 2019]]></title>
            <link>https://imskr.medium.com/girlscript-summer-of-code-2019-dd2e1d91265?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/dd2e1d91265</guid>
            <category><![CDATA[gssoc19]]></category>
            <category><![CDATA[summer-of-code]]></category>
            <category><![CDATA[girlscript]]></category>
            <category><![CDATA[contribution]]></category>
            <category><![CDATA[open-source]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Sun, 26 May 2019 09:27:06 GMT</pubDate>
            <atom:updated>2019-05-26T09:27:06.569Z</atom:updated>
            <content:encoded><![CDATA[<p>A 3 month adventure.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/800/1*Bu8ISOTKKtc-mJHKApWzIQ.png" /></figure><h3><strong>About</strong></h3><p>GirlScript Summer of Code is the 3 month long Open Source program during summers conducted by GirlScript Foundation, started in 2018, with an aim to help beginners get started with Open Source Development while encouraging diversity. Throughout the program, participants contribute to different projects under guidance of experienced mentors.</p><p><a href="https://www.gssoc.tech/"><strong>GirlScript Summer Of Code</strong></a></p><h3>My Journey</h3><blockquote>I had an unexpected and unpredictable journey. I started off as someone who was not particularly open to open source. Now I’m an active player with responsibility for activities in the more visible Open Source projects!</blockquote><p>One day i discovered <strong>GirlScript Summer of Code</strong> page on my <strong>LinkedIn</strong>. I was excited to take part in this 3 month long adventure. But i wasn’t sure that i will be able to make it.</p><blockquote><em>Let’s just give it a shot. Worst comes to worst I might fail but at least I will know that I tried! I do not want to let go of an opportunity.</em></blockquote><blockquote>It’s okay to not know everything, and take one step at a time to learn something new.</blockquote><p>There were many projects and i was confused which to choose but after going through many projects i finally chose <a href="https://github.com/Techtonica/curriculum"><strong>Techtonica</strong></a><strong> </strong>(Web-Dev curriculum).</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*wBZXyZZOE4sYipa41w1OVQ.png" /></figure><p>I’ll be honest here, before starting out everything looked intimidating. But once it’s all done you start finding that everything is a piece of cake.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/500/1*20Tc1xfSFb8mD5HdrBXb0Q.png" /></figure><h4>To all the people who are reading this, I hope I was able to motivate you and make you realize that you are fit to contribute to open source — because the truth is you are! In fact, it’s not even necessary to know a particular programming language, as you can always help with the documentation or you can report detailed bugs and can always learn things along the way.</h4><blockquote>A special thanks to <a href="https://github.com/alodahl">Alina</a> and <a href="https://github.com/kundan28">Kundan</a> for being amazing mentors throughout this journey, following up every time, and answering my various questions. <strong>Thank you so much! ❤️</strong></blockquote><h3>Follow me:</h3><p><a href="https://github.com/imskr"><strong>GitHub</strong></a></p><p><a href="https://twitter.com/iamskr01"><strong>Twitter</strong></a></p><p><a href="https://www.linkedin.com/in/imskr"><strong>LinkedIn</strong></a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=dd2e1d91265" width="1" height="1" alt="">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Demystifying Genetic Algorithm]]></title>
            <link>https://medium.com/code-to-express/demystifying-genetic-algorithm-a91a57bd8c53?source=rss-2612c96405e4------2</link>
            <guid isPermaLink="false">https://medium.com/p/a91a57bd8c53</guid>
            <category><![CDATA[genetic-algorithm]]></category>
            <category><![CDATA[neural-networks]]></category>
            <category><![CDATA[machine-learning]]></category>
            <category><![CDATA[artificial-intelligence]]></category>
            <category><![CDATA[intelligence]]></category>
            <dc:creator><![CDATA[Shubham Kumar]]></dc:creator>
            <pubDate>Fri, 22 Mar 2019 17:49:21 GMT</pubDate>
            <atom:updated>2019-03-23T07:38:44.110Z</atom:updated>
            <content:encoded><![CDATA[<p>“Survival of the fittest”</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/960/1*EZAxj9QnLoQCbHdoPQ3jHQ.jpeg" /><figcaption>Source: Google Images</figcaption></figure><blockquote>“It is not the strongest species that survive, nor the most intelligent, but the ones most responsive to change”</blockquote><blockquote>— Charles Darwin</blockquote><h3>There are Five phases in a genetic algorithm:</h3><p>1. Creating an Initial population</p><p>2. Defining a Fitness function</p><p>3. Selecting the parents</p><p>4. Making a Crossover</p><p>5. Mutation</p><h4>Pseudo Code</h4><pre>START<br>Generate the initial population<br>Compute fitness<br>REPEAT<br>    Selection<br>    Crossover<br>    Mutation<br>    Compute fitness<br>UNTIL population has converged<br>STOP</pre><h3>Let’s Understand the phases of genetic algorithms in detail</h3><h4>Let’s take a simple example:</h4><p>Suppose we want <strong>“Unicorn” </strong>word.</p><p><strong>Step 1:</strong> <strong>Population</strong></p><p>The process begins with a set of individuals which is called a <strong>Population</strong>. Each individual is a solution to the problem you want to solve.</p><p>Select randomly population of three elements, suppose we get</p><ol><li>Unijorm</li><li>caesore</li><li>popcorn</li></ol><p><strong>Step 2: Fitness Function</strong></p><p>The <strong>fitness function</strong> determines how fit an individual is. It gives a <strong>fitness score</strong> to each individual. The probability that an individual will be selected for reproduction is based on its fitness score.</p><p>Here, suppose we define fitness as number of each words match with the desired output.</p><blockquote>Unijorm — 4 (4 words matches with Unicorn)</blockquote><blockquote>caesore — 2 (2 words matches with Unicorn)</blockquote><blockquote>popcorn — 4 (4 words matches with Unicorn)</blockquote><p><strong>Step 3: Selection</strong></p><p>The idea of <strong>selection</strong> phase is to select the fittest individuals and let them pass their genes to the next generation.</p><p>We take top 2 parents with high fitness score that is, <strong>Unijorm</strong> &amp; <strong>popcorn.</strong></p><p><strong>Step 4: Crossover</strong></p><p><strong>crossover</strong>, also called recombination, is a genetic operator used to combine the genetic information of two parents to generate new offspring.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/916/1*4tzkHbsTJqiVdjroc2XrCQ.png" /></figure><p>Here, we combined the genetic information from parents we selected.</p><p>We get <strong>“Unicorn”</strong>.</p><p><strong>Step 5: Mutation</strong></p><blockquote>Mutation occurs to maintain diversity within the population and prevent premature convergence.</blockquote><p>We already got our desired result after crossover so it will <strong>not mutate</strong>.</p><h3>Implementation of Genetic Algorithm in Code</h3><p>Finding <strong>“Unicorn”</strong> with (Java &amp; Processing)</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/65c926f02d6c9e61594e68beae9dea51/href">https://medium.com/media/65c926f02d6c9e61594e68beae9dea51/href</a></iframe><p>Using above DNA class in main file.</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/88a8478d2b434498f035cc9b70d547b8/href">https://medium.com/media/88a8478d2b434498f035cc9b70d547b8/href</a></iframe><p>Implementation of GA in Simple Flappy Bird Game(Using JavaScript):</p><p><a href="https://github.com/imskr/Flappy-Bird-AI">imskr/Flappy-Bird-AI</a></p><h3>Conclusion</h3><p><em>It is better than conventional AI and it is more robust. Unlike older AI systems, they do not break easily even if the inputs changed slightly, or in the presence of reasonable noise. Also, in searching a large state-space it is very efficient.</em></p><h3>References</h3><ul><li><a href="https://natureofcode.com/book/chapter-9-the-evolution-of-code/">The Nature of Code by Daniel Shiffman</a></li></ul><h3>Get your own blog published on C2E Blog</h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ONkkzu1AYRCweHBuAMmDig.png" /></figure><p>Do you want to write for CodeToExpress? We would love to have you as a technical writer. Send us an email with a link to your draft at <a href="mailto:codetoexpress@gmail.com">codetoexpress@gmail.com</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a91a57bd8c53" width="1" height="1" alt=""><hr><p><a href="https://medium.com/code-to-express/demystifying-genetic-algorithm-a91a57bd8c53">Demystifying Genetic Algorithm</a> was originally published in <a href="https://medium.com/code-to-express">Code To Express</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
    </channel>
</rss>
